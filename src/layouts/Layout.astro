---
import Navbar from "@/components/Navbar.astro";
export interface Props {
  title: string;
}

const { title } = Astro.props as Props;
---

<!DOCTYPE html>
<html class="antialiased" lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <script>
      type ThemeOpts = "light" | "dark" | "system";
      let mediaQuery = window.matchMedia("(prefers-color-scheme: dark)");

      function updateTheme(savedTheme?: ThemeOpts) {
        let theme = "system";
        try {
          if (!savedTheme) {
            savedTheme = window.localStorage.theme;
          }
          if (savedTheme === "dark") {
            theme = "dark";
            document.documentElement.classList.add("dark");
          } else if (savedTheme === "light") {
            theme = "light";
            document.documentElement.classList.remove("dark");
          } else if (mediaQuery.matches) {
            document.documentElement.classList.add("dark");
          } else {
            document.documentElement.classList.remove("dark");
          }
        } catch {
          theme = "light";
          document.documentElement.classList.remove("dark");
        }
        return theme;
      }

      function updateThemeWithoutTransitions(savedTheme: ThemeOpts) {
        updateTheme(savedTheme);
        document.documentElement.classList.add("[&_*]:!transition-none");
        window.setTimeout(() => {
          document.documentElement.classList.remove("[&_*]:!transition-none");
        }, 10);
      }

      document.documentElement.setAttribute("data-theme", updateTheme());

      new MutationObserver(([{ oldValue }]): void => {
        let newValue = document.documentElement.getAttribute(
          "data-theme"
        ) as ThemeOpts;
        if (newValue !== oldValue) {
          try {
            window.localStorage.setItem("theme", newValue);
          } catch {}
          updateThemeWithoutTransitions(newValue);
        }
      }).observe(document.documentElement, {
        attributeFilter: ["data-theme"],
        attributeOldValue: true,
      });

      mediaQuery.addEventListener("change", updateThemeWithoutTransitions);
      window.addEventListener("storage", updateThemeWithoutTransitions);
    </script>
    <title>{title} - javierreyes.dev</title>
  </head>

  <body
    class="antialiased text-slate-900 dark:text-white flex flex-col flex-1 dark:bg-slate-900"
  >
    <Navbar />
    <slot />
  </body>
</html>
